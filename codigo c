#include <stdio.h>
#include <string.h>

int main() {
    char nomes[10][50];
    int vitorias[10], empates[10], derrotas[10];
    int gols_marcados[10], gols_sofridos[10], pontos[10];
    int controle[1];  
    int i, j, opcao;

    for (i = 0; i < 10; i++) {
        vitorias[i] = empates[i] = derrotas[i] = 0;
        gols_marcados[i] = gols_sofridos[i] = 0;
        pontos[i] = 0;
    }
    controle[0] = 0;

    do {
        printf("\n================= MENU =================\n");
        printf("1 - Cadastrar times\n");
        printf("2 - Registrar resultado de uma partida\n");
        printf("3 - Mostrar tabela de classificacao completa\n");
        printf("4 - Mostrar os cinco primeiros colocados\n");
        printf("5 - Mostrar os times rebaixados (Z4)\n");
        printf("6 - Mostrar dados de um time especifico\n");
        printf("7 - Sair do programa\n");
        printf("========================================\n");
        printf("Escolha sua opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1: {
                int n;
                printf("\nQuantos times deseja cadastrar (1 a 10): ");
                scanf("%d", &n);
                getchar();
                if (n < 1 || n > 10) {
                    printf("Numero invalido de times!\n");
                } else {
                    controle[0] = n;
                    for (i = 0; i < n; i++) {
                        vitorias[i] = empates[i] = derrotas[i] = 0;
                        gols_marcados[i] = gols_sofridos[i] = 0;
                        pontos[i] = 0;
                        printf("Digite o nome do time %d: ", i+1);
                        scanf("%49s", nomes[i]);
                    }
                    printf("Times cadastrados com sucesso!\n");
                }
                break;
            }

            case 2: {
                if (controle[0] <= 0) {
                    printf("Cadastre os times primeiro (opcao 1).\n");
                } else {
                    int t1, t2, g1, g2;
                    printf("\nLista de times:\n");
                    for (i = 0; i < controle[0]; i++) {
                        printf("%d - %s\n", i+1, nomes[i]);
                    }
                    printf("Escolha o numero do primeiro time: ");
                    scanf("%d", &t1);
                    printf("Escolha o numero do segundo time: ");
                    scanf("%d", &t2);
                    printf("Gols do %s: ", nomes[t1-1]);
                    scanf("%d", &g1);
                    printf("Gols do %s: ", nomes[t2-1]);
                    scanf("%d", &g2);

                    gols_marcados[t1-1] += g1;
                    gols_sofridos[t1-1] += g2;
                    gols_marcados[t2-1] += g2;
                    gols_sofridos[t2-1] += g1;

                    if (g1 > g2) {
                        vitorias[t1-1]++; derrotas[t2-1]++;
                        pontos[t1-1] += 3;
                    } else if (g2 > g1) {
                        vitorias[t2-1]++; derrotas[t1-1]++;
                        pontos[t2-1] += 3;
                    } else {
                        empates[t1-1]++; empates[t2-1]++;
                        pontos[t1-1]++; pontos[t2-1]++;
                    }

                    printf("Resultado registrado com sucesso!\n");
                }
                break;
            }

            case 3: {
                if (controle[0] <= 0) {
                    printf("Nenhum dado disponivel. Cadastre times e resultados primeiro.\n");
                } else {
                    for (i = 0; i < controle[0]-1; i++) {
                        for (j = i+1; j < controle[0]; j++) {
                            int saldo_i = gols_marcados[i] - gols_sofridos[i];
                            int saldo_j = gols_marcados[j] - gols_sofridos[j];
                            if (pontos[j] > pontos[i] ||
                               (pontos[j] == pontos[i] && saldo_j > saldo_i) ||
                               (pontos[j] == pontos[i] && saldo_j == saldo_i && vitorias[j] > vitorias[i])) {
                                char tempNome[50];
                                strcpy(tempNome, nomes[i]); strcpy(nomes[i], nomes[j]); strcpy(nomes[j], tempNome);
                                int temp;
                                temp = vitorias[i]; vitorias[i] = vitorias[j]; vitorias[j] = temp;
                                temp = empates[i]; empates[i] = empates[j]; empates[j] = temp;
                                temp = derrotas[i]; derrotas[i] = derrotas[j]; derrotas[j] = temp;
                                temp = gols_marcados[i]; gols_marcados[i] = gols_marcados[j]; gols_marcados[j] = temp;
                                temp = gols_sofridos[i]; gols_sofridos[i] = gols_sofridos[j]; gols_sofridos[j] = temp;
                                temp = pontos[i]; pontos[i] = pontos[j]; pontos[j] = temp;
                            }
                        }
                    }
                    printf("\n======= TABELA DE CLASSIFICACAO =======\n");
                    printf("%-15s %3s %3s %3s %3s %3s %3s %3s\n", "Time", "Vit", "Emp", "Der", "GM", "GS", "SG", "Pts");
                    for (i = 0; i < controle[0]; i++) {
                        int saldo = gols_marcados[i] - gols_sofridos[i];
                        printf("%-15s %3d %3d %3d %3d %3d %3d %3d\n",
                               nomes[i], vitorias[i], empates[i], derrotas[i],
                               gols_marcados[i], gols_sofridos[i], saldo, pontos[i]);
                    }
                    printf("=======================================\n");
                }
                break;
            }

            case 4: {
                if (controle[0] <= 0) {
                    printf("Nenhum dado disponivel. Cadastre times e resultados primeiro.\n");
                } else {
                    printf("\n====== TOP 5 CLASSIFICADOS ======\n");
                    printf("%-15s %3s %3s %3s\n", "Time", "Pts", "Vit", "SG");
                    for (i = 0; i < controle[0] && i < 5; i++) {
                        int saldo = gols_marcados[i] - gols_sofridos[i];
                        printf("%-15s %3d %3d %3d\n",
						 nomes[i], pontos[i], vitorias[i], saldo);
                    }
                    printf("=================================\n");
                }
                break;
            }

            case 5: {
                if (controle[0] <= 0) {
                    printf("Nenhum dado disponivel. Cadastre times e resultados primeiro.\n");
                } else {
                    printf("\n====== TIMES REBAIXADOS (Z4) ======\n");
                    printf("%-15s %3s\n", "Time", "Pts");
                    for (i = controle[0]-4; i < controle[0]; i++) {
                        if (i >= 0) {
                            printf("%-15s %3d\n", nomes[i], pontos[i]);
                        }
                    }
                    printf("==================================\n");
                }
                break;
            }

            case 6: {
    			if (controle[0] <= 0) {
       			 printf("Nenhum dado disponivel. Cadastre times e resultados primeiro.\n");
    			} else {
        		char busca[50];
        		int i;
        		printf("Digite o nome do time: ");
        		scanf("%49s", busca);

        	for (i = 0; i < controle[0]; i++) {
            	if (strcmp(busca, nomes[i]) == 0) {
                int saldo = gols_marcados[i] - gols_sofridos[i];
                printf("\n====== DADOS DO TIME ======\n");
                printf("Nome: %s\n", nomes[i]);
                printf("Vitorias: %d\n", vitorias[i]);
                printf("Empates: %d\n", empates[i]);
                printf("Derrotas: %d\n", derrotas[i]);
                printf("Gols marcados: %d\n", gols_marcados[i]);
                printf("Gols sofridos: %d\n", gols_sofridos[i]);
                printf("Saldo de gols: %d\n", saldo);
                printf("Pontos: %d\n", pontos[i]);
                printf("===========================\n");
                break;
            	}
        	}
        		if (i == controle[0]) {
            printf("Time nao encontrado!\n");
        	}
    	}
    	break;
	}	


            case 7:
                printf("\nPrograma encerrado pelo usuario.\n");
                break;
        }

    } while (opcao != 7);

    return 0;
}
